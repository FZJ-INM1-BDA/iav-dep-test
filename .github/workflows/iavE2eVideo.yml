name: "[iav] [dev] [expmt] e2e"

on:
  push:
    branches:
      - master

jobs:
  e2e:
    runs-on: [self-hosted, non-headless, gpu]
    strategy:
      matrix:
        nehubaui-branch: [ dev ] # only use dev here
        protractor-spec: [ 
          './src/advanced/browsingForDatasets.prod.e2e-spec.js'
        ]
        include:
        - nehubaui-branch: dev
          iav-deploy-url: 'https://interactive-viewer-next.apps-dev.hbp.eu/'
    env:
      NEHUBAUI_BRANCH: ${{ matrix.nehubaui-branch }}
      PROTRACTOR_SPECS: ${{ matrix.protractor-spec }}
      ATLAS_URL: ${{ matrix.iav-deploy-url }}
      PPTR_VERSION: "5.3.1"
      CHROMIUM_VERSION: "86.0.4240.0"
      RECORDING_FLAG: "1"
      ENABLE_GPU: "1"
      DISABLE_CHROME_HEADLESS: "1"

    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'HumanBrainProject/interactive-viewer'
        ref: ${{ matrix.nehubaui-branch }}

    # should not need to install dep... Since it's self hosted, it should have been installed already...
    - name: Install dep
      run: |
        npm i
        npm run wd -- update --versions.chrome=${CHROMIUM_VERSION}
        npm i --no-save puppeteer@${PPTR_VERSION}

    - name: Start recording
      run: |
        tmux new-session -d -s iav-recording 'ffmpeg -f x11grab -video_size 1920x1080 -framerate 25 -i :0 output.mp4'
  
    - name: 'Run e2e for ${{ matrix.protractor-spec }} on ${{ matrix.iav-deploy-url }}'
      run: npm run e2e

    - name: Stop recording
      if: ${{ always() }}
      run: tmux send-keys -t iav-recording q

    - name: Sleep for 10s, allowing ffmpeg to.... finish doing its thing?
      if: ${{ always() }}
      run: sleep 10

    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: output
        path: output.mp4
