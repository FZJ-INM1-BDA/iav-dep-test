name: "[kg/query] [10min]"

on:
  schedule:
    - cron: '*/10 * * * *'

env:
  SIIBRA_MONITORING_KG_QUERY_INSTANCE: ${{ secrets.SIIBRA_MONITORING_KG_QUERY_INSTANCE }}
  OAUTH_V2_SA_CLIENT_ID: ${{ secrets.OAUTH_V2_SA_CLIENT_ID }}
  OAUTH_V2_SA_CLIENT_SECRET: ${{ secrets.OAUTH_V2_SA_CLIENT_SECRET }}
  OAUTH_V2_SA_ENDPOINT: ${{ secrets.OAUTH_V2_SA_ENDPOINT }}
  OAUTH_V2_SA_SCOPES: ${{ secrets.OAUTH_V2_SA_SCOPES }}
jobs:
  specific-query:
    runs-on: ubuntu-latest

    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # possible values: at_id, identifier
        id_type: [ 'at_id', 'identifier' ]
      
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Run instance, using ${{ matrix.id_type }}
      run: |
        if [[ "${{ matrix.id_type }}" == "at_id" ]]
        then
          export KG_INSTANCE_ID="e715e1f7-2079-45c4-a67f-f76b102acfce"
        fi
        if [[ "${{ matrix.id_type }}" == "identifier" ]]
        then
          export KG_INSTANCE_ID="0616d1e97b8be75de526bc265d9af540"
        fi
        if [ -z "$KG_INSTANCE_ID" ]
        then
          echo "KG_INSTANCE_ID needs to be configured!"
          exit 1
        fi
        echo KG_INSTANCE_ID: $KG_INSTANCE_ID
        npm i
        npm run mocha -- './siibra/dep/kg-query.spec.js' --timeout 5000
    - name: Report to monitoring
      if: success()
      run: |
        if [ ! -z "$SIIBRA_MONITORING_KG_QUERY_INSTANCE" ]
        then
          NEW_URL=$(sed -E "s/(\?.*?)msg=\w+(&)?/\1msg=${{ matrix.id_type }}\2/" <<< "$SIIBRA_MONITORING_KG_QUERY_INSTANCE")
          curl "$NEW_URL"
        fi
